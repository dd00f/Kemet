package kemet.model;

import static org.junit.jupiter.api.Assertions.*;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import org.junit.jupiter.api.Test;

import kemet.data.TwoPlayerGame;
import kemet.util.ByteCanonicalForm;
import lombok.EqualsAndHashCode;
import lombok.extern.log4j.Log4j2;

@Log4j2
class KemetGameDuplicateMovesTest {

	private TwoPlayerGame factory;
	private KemetGame createGame;

	private Map<String, Valid> validMap = new HashMap<>();
	private Map<String, int[]> movesToReach = new HashMap<>();

	@EqualsAndHashCode
	public static class Valid {
		public boolean[] valid;
	}

	@Test
	void testCanonicalFormFromReplay() {
		factory = new TwoPlayerGame();
		createGame = factory.createGame();

		int[] actions = null;
		actions = new int[] { 26, 23, 26, 25, 24, 27, 23, 22, 4, 4, 4, 4, 43, 42, 0, 44, 43, 42, 15, 29, 39, 0, 41, 15,
				10, 4, 21, 4, 40, 0, 40, 15, 0, 44, 42, 14, 27, 42, 0, 44, 43, 43, 39, 14, 10, 4, 0, 40, 15, 1, 14, 1,
				40, 14, 1, 0, 41, 21, 12, 4, 44, 44, 42, 14, 0, 40, 43, 42, 14, 0, 39, 10, 0, 43, 40, 14, 1, 41, 12, 21,
				4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39,
				10, 0, 42, 14, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 21, 12, 4,
				44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10,
				0, 42, 14, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 12, 21, 4, 44,
				43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0,
				42, 14, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 21, 12, 4, 44,
				43, 42, 0, 44, 43, 40, 39, 0, 42, 14, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42,
				14, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 14, 29, 40, 41, 12, 21, 4, 44 };
		replayGamesStackValidMoves(actions);

		actions = new int[] { 27, 23, 25, 26, 23, 26, 25, 24, 4, 4, 4, 4, 42, 0, 43, 43, 44, 39, 14, 10, 0, 42, 15, 0,
				40, 0, 40, 15, 1, 14, 1, 44, 41, 15, 10, 4, 21, 4, 42, 0, 40, 43, 44, 39, 14, 10, 4, 0, 43, 40, 14, 2,
				42, 15, 27, 44, 39, 21, 12, 4, 42, 0, 40, 40, 43, 43, 44, 39, 10, 0, 42, 15, 0, 44, 39, 12, 21, 4, 42,
				0, 43, 43, 44, 39, 10, 0, 40, 40, 42, 15, 28, 44, 39, 21, 12, 4, 42, 0, 40, 40, 43, 43, 44, 39, 10, 0,
				42, 15, 0, 44, 39, 12, 21, 4, 42, 0, 40, 43, 44, 39, 10, 0, 43, 40, 42, 15, 29, 44, 39, 21, 12, 4, 42,
				0, 40, 43, 43, 39, 0, 44, 40, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 10, 0, 40, 40,
				41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40, 43, 43, 39, 0, 44, 40, 41, 12, 21, 4, 44, 39, 21, 12, 4,
				42, 0, 40, 43, 43, 39, 0, 44, 44, 42, 14, 28, 40, 39, 12, 21, 4, 42, 0, 40, 43, 44, 39, 10, 0, 43, 40,
				41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 14, 0, 40, 43, 43, 39, 10, 0, 44, 40, 41, 21, 12, 4, 44, 39, 12,
				21, 4, 42, 0, 40, 43, 43, 39, 10, 0, 44, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 40, 43, 44, 39,
				10, 0, 43, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 40, 43, 44, 39, 10, 0, 43, 40, 41, 21, 0, 44,
				42, 14, 29 };
		replayGamesStackValidMoves(actions);

		actions = new int[] { 26, 23, 26, 25, 24, 27, 23, 22, 4, 4, 4, 4, 42, 15, 27, 44, 44, 42, 0, 43, 43, 41, 15, 10,
				4, 21, 4, 39, 14, 10, 4, 0, 40, 15, 1, 14, 1, 40, 14, 2, 40, 42, 0, 44, 43, 43, 39, 10, 0, 42, 15, 0,
				40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 15, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44,
				43, 40, 39, 10, 0, 42, 15, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 15, 0, 40, 39,
				12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 15, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43,
				40, 39, 0, 42, 15, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 15, 0, 40, 39, 21,
				12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 15, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39,
				10, 0, 42, 15, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 15, 0, 40, 39, 12, 21, 4, 44,
				43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 15, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42,
				15, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 15, 0, 40, 39, 21, 12, 4, 44, 43,
				42, 0, 44, 43, 40, 39, 0, 42, 15, 29, 40, 41, 12, 21, 4, 44 };
		replayGamesStackValidMoves(actions);

		actions = new int[] { 27, 23, 25, 26, 23, 26, 25, 24, 4, 4, 4, 4, 42, 0, 42, 15, 27, 43, 44, 39, 14, 10, 0, 41,
				15, 10, 4, 21, 4, 40, 0, 43, 44, 40, 15, 1, 14, 1, 42, 0, 40, 43, 44, 39, 14, 10, 4, 0, 43, 40, 14, 1,
				0, 42, 15, 29, 44, 41, 21, 12, 4, 42, 0, 40, 43, 43, 39, 10, 0, 44, 40, 0, 41, 12, 21, 4, 44, 39, 21,
				12, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 14, 1, 42, 14, 0, 44, 39, 12, 21, 4, 42, 0, 40, 43, 44, 39, 10,
				0, 43, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 40, 43, 44, 39, 10, 0, 43, 40, 41, 21, 12, 4, 44,
				39, 12, 21, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 43, 43, 44,
				39, 0, 40, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 43, 43, 44, 39, 0, 40, 40, 41, 21, 12, 4, 44,
				39, 12, 21, 4, 42, 0, 43, 43, 44, 39, 10, 0, 40, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 40, 43,
				44, 39, 10, 0, 43, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 40, 43, 44, 39, 10, 0, 43, 40, 41, 21,
				12, 4, 44, 39, 12, 21, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 40,
				43, 44, 39, 10, 0, 43, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 41, 21,
				0, 44, 42, 14, 29 };
		replayGamesStackValidMoves(actions);

		actions = new int[] { 26, 23, 26, 25, 24, 27, 23, 22, 4, 4, 4, 4, 41, 15, 10, 4, 21, 4, 42, 0, 43, 43, 44, 39,
				14, 10, 4, 0, 42, 15, 27, 40, 14, 0, 40, 15, 1, 14, 1, 44, 42, 15, 28, 44, 40, 42, 0, 44, 43, 43, 39, 0,
				39, 21, 12, 4, 40, 14, 2, 40, 42, 0, 43, 43, 44, 39, 10, 0, 42, 15, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0,
				44, 43, 40, 39, 0, 42, 15, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 15, 0, 40, 39,
				12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 15, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43,
				40, 39, 0, 42, 15, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 15, 0, 40, 39, 21, 12, 4,
				44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 15, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0,
				42, 15, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 15, 0, 40, 39, 12, 21, 4, 44, 43,
				42, 0, 44, 43, 40, 39, 10, 0, 42, 15, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 0, 42, 15, 0,
				40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 15, 0, 40, 39, 21, 12, 4, 44, 43, 42, 0,
				44, 43, 40, 39, 0, 42, 15, 29, 40, 41, 12, 21, 4, 44 };
		replayGamesStackValidMoves(actions);

		actions = new int[] { 26, 23, 26, 22, 24, 26, 23, 26, 25, 24, 4, 4, 4, 4, 42, 0, 43, 43, 44, 39, 14, 0, 42, 15,
				0, 40, 0, 40, 15, 1, 14, 1, 44, 41, 15, 10, 4, 21, 4, 42, 0, 40, 43, 44, 39, 14, 10, 4, 0, 43, 40, 14,
				2, 42, 15, 27, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 40, 40, 42, 15, 0, 44, 39, 12, 21, 4, 42, 0,
				44, 43, 43, 39, 10, 0, 40, 40, 42, 15, 28, 44, 39, 21, 12, 4, 42, 0, 40, 43, 43, 39, 0, 44, 40, 42, 15,
				0, 44, 39, 12, 21, 4, 42, 0, 44, 43, 43, 39, 0, 40, 40, 42, 15, 29, 44, 39, 21, 12, 4, 42, 0, 40, 43,
				43, 39, 0, 44, 40, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40, 43, 43, 39, 0, 44, 40, 41, 12, 21, 4,
				44, 39, 21, 12, 4, 42, 0, 40, 40, 43, 43, 44, 39, 10, 0, 42, 14, 28, 44, 39, 12, 21, 4, 42, 0, 40, 43,
				43, 39, 10, 0, 44, 40, 41, 21, 12, 4, 44, 39, 12, 21, 4, 42, 0, 43, 43, 44, 39, 10, 0, 40, 40, 41, 21,
				12, 4, 44, 39, 12, 21, 4, 42, 0, 43, 43, 44, 39, 10, 0, 40, 44, 42, 14, 0, 40, 39, 21, 12, 4, 42, 0, 43,
				43, 44, 39, 10, 0, 40, 40, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 10, 0, 40, 40, 41,
				12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 40, 40, 41, 0, 44, 42, 14, 29 };
		replayGamesStackValidMoves(actions);

		actions = new int[] { 26, 23, 26, 25, 24, 27, 23, 22, 4, 4, 4, 4, 41, 15, 10, 4, 21, 4, 42, 0, 43, 43, 44, 39,
				14, 10, 4, 0, 42, 15, 27, 40, 14, 1, 0, 40, 15, 1, 14, 1, 44, 42, 15, 29, 44, 40, 42, 0, 44, 43, 43, 39,
				10, 0, 39, 21, 12, 4, 40, 0, 40, 42, 0, 44, 43, 43, 39, 0, 42, 14, 0, 40, 14, 0, 0, 41, 12, 21, 4, 44,
				43, 42, 0, 40, 43, 44, 39, 10, 0, 42, 14, 27, 40, 14, 1, 39, 21, 12, 3, 44, 43, 42, 14, 0, 44, 43, 40,
				39, 10, 0, 42, 14, 0, 40, 41, 21, 12, 1, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 12,
				21, 4, 44, 42, 14, 29, 40, 43, 42, 0, 44, 43, 40, 39, 10, 0, 41, 21, 12, 4, 44, 43, 42, 14, 0, 44, 43,
				40, 39, 10, 0, 41, 12, 21, 4, 40, 39, 21, 12, 4, 44, 43, 42, 14, 0, 44, 43, 40, 39, 10, 0, 41, 12, 21,
				4, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 41, 12, 21, 4, 40, 39, 21, 12, 4, 44, 43,
				42, 0, 44, 43, 40, 39, 10, 0, 41, 12, 21, 4, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0,
				41, 12, 21, 4, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 41, 12, 21, 4, 40, 39, 21, 12,
				4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 41, 12, 21, 4, 40, 39, 21, 12, 4, 44, 43, 42, 0, 44, 43, 40,
				39, 0, 41, 12, 21, 4, 40, 39, 21, 12, 4, 44 };

		replayGamesStackValidMoves(actions);
		actions = new int[] { 26, 23, 26, 22, 24, 26, 23, 26, 25, 24, 4, 4, 4, 4, 42, 0, 42, 15, 27, 43, 43, 39, 14, 10,
				4, 0, 44, 40, 14, 0, 41, 15, 10, 4, 35, 31, 35, 31, 38, 38, 44, 39, 14, 10, 4, 21, 4, 42, 0, 43, 43, 44,
				39, 0, 42, 15, 0, 40, 14, 0, 40, 15, 4, 14, 1, 0, 44, 41, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 42, 15,
				29, 40, 14, 0, 40, 15, 1, 44, 39, 12, 21, 4, 42, 0, 40, 43, 43, 39, 0, 44, 40, 14, 1, 0, 42, 14, 27, 44,
				41, 21, 12, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40,
				43, 44, 39, 0, 43, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 14,
				0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 14, 0, 0, 41, 12, 21, 4, 44,
				39, 21, 12, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40,
				43, 44, 39, 0, 43, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 14,
				0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 14, 0, 0, 41, 12, 21, 4, 44,
				39, 21, 12, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40,
				43, 44, 39, 0, 43, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 40, 43, 44, 39, 0, 43, 40, 14,
				0, 0, 41, 12, 21, 4, 44, 39, 0 };

		replayGamesStackValidMoves(actions);
		actions = new int[] { 26, 23, 26, 25, 24, 27, 23, 25, 4, 4, 4, 4, 43, 42, 0, 44, 43, 42, 15, 29, 39, 14, 10, 4,
				0, 40, 15, 1, 14, 1, 40, 14, 1, 0, 39, 15, 17, 4, 44, 44, 42, 14, 0, 40, 43, 43, 39, 10, 0, 42, 14, 27,
				40, 14, 1, 41, 17, 12, 4, 44, 43, 42, 14, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 12, 21, 4, 44,
				43, 42, 14, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 21, 12, 4, 44, 43, 42, 14, 0, 44, 43, 40, 39,
				10, 0, 42, 14, 0, 40, 39, 12, 21, 4, 44, 43, 42, 14, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 21,
				12, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40,
				39, 10, 0, 42, 14, 0, 40, 39, 21, 12, 4, 44, 43, 42, 14, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39,
				12, 21, 4, 44, 44, 42, 14, 0, 43, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 21, 12, 4, 44, 43, 42, 14, 0,
				44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 12, 21, 4, 44, 43, 42, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0,
				40, 39, 21, 12, 4, 44, 43, 42, 14, 0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 12, 21, 4, 44, 43, 42,
				0, 44, 43, 40, 39, 10, 0, 42, 14, 0, 40, 39, 21, 12, 4, 44, 43, 42, 14, 0, 44, 43, 40, 39, 10, 0, 42,
				14, 29, 40, 41, 12, 21, 4, 44 };

		replayGamesStackValidMoves(actions);
		actions = new int[] { 26, 23, 26, 22, 24, 26, 23, 26, 25, 24, 4, 4, 4, 4, 42, 0, 42, 15, 27, 43, 43, 39, 14, 10,
				4, 0, 44, 40, 14, 1, 0, 41, 15, 10, 4, 35, 31, 35, 31, 38, 38, 44, 39, 14, 10, 4, 21, 4, 42, 0, 43, 43,
				44, 39, 0, 42, 15, 0, 40, 14, 0, 0, 40, 15, 4, 14, 1, 0, 44, 41, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0,
				42, 15, 0, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 42, 15, 0, 40, 14,
				0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 42, 15, 0, 40, 14, 0, 0, 41, 12, 21,
				4, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 42, 15, 0, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12,
				4, 42, 0, 43, 43, 44, 39, 0, 42, 15, 0, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 43, 43,
				44, 39, 0, 42, 15, 0, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 42, 15,
				0, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 42, 15, 0, 40, 14, 0, 0,
				41, 12, 21, 4, 44, 39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 42, 15, 0, 40, 14, 0, 0, 41, 12, 21, 4, 44,
				39, 21, 12, 4, 42, 0, 43, 43, 44, 39, 0, 42, 15, 0, 40, 14, 0, 0, 41, 12, 21, 4, 44, 39, 21, 12, 4, 42,
				0, 43, 43, 44, 39, 0, 42, 15, 0, 40, 14, 0, 0, 39, 12, 21, 4, 44, 41, 21, 12, 4, 42, 0, 43, 43, 44, 39,
				0, 40, 15, 1, 40, 14, 0, 0, 42, 15, 28, 44, 39, 12, 21, 4, 42, 0, 40, 43, 43, 39, 0, 44, 40, 14, 1, 0,
				42, 0, 44, 41, 21, 12, 4 };
		replayGamesStackValidMoves(actions);

		actions = new int[] { 26, 23, 26, 25, 24, 26, 23, 26, 25, 24, 4, 4, 4, 4, 41, 15, 10, 4, 21, 4, 42, 15, 27, 43,
				44, 44, 43, 42, 15, 27, 40, 0, 39, 21, 12, 4, 39, 15, 10, 3, 9, 3, 44, 43, 42, 0, 44, 43, 42, 15, 0, 41,
				12, 21, 4, 40, 15, 1, 14, 1, 40, 15, 1, 14, 1, 39, 9, 12, 3, 42, 15, 28, 43, 43, 40, 39, 21, 12, 3, 31,
				35, 35, 31, 38, 38, 44, 44, 42, 15, 0, 40, 15, 3, 41, 15, 10, 1, 21, 1, 40, 43, 42, 15, 0, 44, 44, 42,
				15, 28, 43, 40, 15, 3, 41, 21, 12, 1, 39, 21, 0, 42, 15, 29, 44, 43, 40, 40, 42, 15, 0, 41, 12, 21, 1,
				43, 44, 39, 21, 12, 0, 40, 43, 44, 40, 43, 41, 21, 12, 1, 42, 14, 0, 42, 15, 0, 41, 14, 10, 4, 21, 3,
				44, 44, 43, 43, 44, 40, 40, 42, 14, 29, 42, 15, 0, 41, 21, 12, 4, 33, 36, 33, 34, 38, 41, 15, 10, 4 };
		replayGamesStackValidMoves(actions);

		actions = new int[] { 26, 23, 26, 25, 24, 26, 23, 26, 25, 24, 3, 5, 4, 4, 44, 44, 43, 43, 40, 14, 1, 16, 1, 42,
				15, 28, 41, 15, 10, 4, 21, 1, 41, 15, 0, 42, 15, 27, 39, 15, 10, 4, 35, 36, 35, 36, 38, 38, 40, 15, 3,
				44, 44, 43, 43, 42, 15, 29, 42, 15, 0, 40, 15, 4, 14, 1, 0, 41, 0, 39, 0, 40, 40, 15, 1, 43, 43, 44, 44,
				42, 15, 29, 42, 14, 27, 41, 21, 12, 1, 39, 15, 10, 4, 21, 4, 40, 43, 44, 40, 43, 42, 14, 29, 39, 12, 21,
				0, 44, 42, 14, 27, 39, 21, 12, 3, 31, 33, 31, 33, 38, 38, 44, 43, 42, 0, 44, 41, 15, 10, 0, 39, 21, 12,
				1, 43, 40, 15, 3, 40, 15, 1, 41, 12, 21, 0, 44, 44, 43, 43, 40, 40, 41, 15, 10, 4, 21, 3, 42, 0, 42, 14,
				0, 39, 12, 21, 1, 42, 14, 28, 40, 43, 43, 44, 44, 41, 21, 12, 3, 41, 21, 12, 1, 34, 30, 34, 30, 40, 15,
				3, 39, 15, 10, 4 };
		replayGamesStackValidMoves(actions);

		actions = new int[] { 26, 23, 26, 25, 24, 26, 23, 26, 25, 24, 3, 5, 4, 4, 44, 44, 43, 43, 40, 14, 1, 16, 1, 42,
				15, 28, 41, 15, 10, 4, 21, 1, 41, 15, 0, 42, 15, 27, 39, 15, 10, 4, 35, 36, 35, 36, 38, 38, 40, 15, 3,
				44, 44, 43, 43, 42, 15, 29, 42, 15, 0, 40, 15, 4, 14, 1, 0, 41, 0, 39, 0, 40, 40, 15, 1, 43, 43, 44, 44,
				42, 15, 29, 42, 14, 27, 41, 21, 12, 1, 39, 15, 10, 4, 21, 4, 40, 43, 44, 40, 43, 42, 14, 29, 39, 12, 21,
				0, 44, 42, 14, 27, 39, 21, 12, 3, 31, 33, 31, 33, 38, 38, 44, 43, 42, 0, 44, 41, 15, 10, 0, 39, 21, 12,
				1, 43, 40, 15, 3, 40, 15, 1, 41, 12, 21, 0, 44, 44, 43, 43, 40, 40, 41, 15, 10, 4, 21, 3, 42, 0, 42, 14,
				0, 39, 12, 21, 1, 42, 14, 28, 40, 43, 43, 44, 44, 41, 21, 12, 3, 41, 21, 12, 1, 34, 37, 34, 30, 40, 15,
				3, 39, 15, 10, 4 };
		replayGamesStackValidMoves(actions);

		createGame.printActivations = true;
		createGame.printDescribeGame();
		
		ByteCanonicalForm canonicalForm = createGame.getCanonicalForm(0);
		float[] floatCanonicalForm = canonicalForm.getFloatCanonicalForm();
		validateFloatCanonicalForm(floatCanonicalForm);
	}

	private void validateFloatCanonicalForm(float[] floatCanonicalForm) {
		for (int i = 0; i < floatCanonicalForm.length; i++) {
			float f = floatCanonicalForm[i];
			if( f > 1.0 || f < -1.0 ) {
				
				System.out.println(KemetByteCanonicalForm.describeBoard(floatCanonicalForm));
				
				fail( "Canonical value out of bound : " + i + " value " + f);
			}
		}
		
	}

	private void replayGamesStackValidMoves(int[] actions) {

		createGame = factory.createGame();
		createGame.printActivations = false;

		Valid v1 = new Valid();
		Valid v2 = new Valid();
		Valid v3 = new Valid();
		v1.valid = createGame.getValidMoves();
		v2.valid = createGame.getValidMoves();
		v3.valid = createGame.getValidMoves();
		v3.valid[10] = !v3.valid[10];
		assertEquals(v1, v2);
		assertNotEquals(v1, v3);

		for (int actionIndex : actions) {
			int nextPlayer = createGame.getNextPlayer();
			ByteCanonicalForm cf = createGame.getCanonicalForm(nextPlayer);
			float[] floatCanonicalForm = cf.getFloatCanonicalForm();
			validateFloatCanonicalForm(floatCanonicalForm);

			createGame.activateAction(nextPlayer, actionIndex);
			

			if (createGame.getGameEnded(0) != 0) {
				ByteCanonicalForm canonicalForm = cf;
				Valid valid = new Valid();
				valid.valid = createGame.getValidMoves();
				checkForValidMoveMatch(canonicalForm, valid);
			}

//			if (createGame.getGameEnded(0) != 0) {
//				ByteCanonicalForm canonicalForm = createGame.getCanonicalForm(createGame.getNextPlayer());
//				Valid valid = new Valid();
//				valid.valid = createGame.getValidMoves();
//				valid.actionsToReach = createGame.getActivatedActions();
//				checkForValidMoveMatch(canonicalForm, valid);
//			}

//			{
//				ByteCanonicalForm canonicalForm = createGame.getCanonicalForm(1);
//				Valid valid = new Valid();
//				valid.valid = createGame.getValidMoves();
//				valid.actionsToReach = createGame.getActivatedActions();
//				checkForValidMoveMatch(canonicalForm, valid);
//			}
//
//			{
//				ByteCanonicalForm canonicalForm = createGame.getCanonicalForm(0);
//				Valid valid = new Valid();
//				valid.valid = createGame.getValidMoves();
//				valid.actionsToReach = createGame.getActivatedActions();
//				checkForValidMoveMatch(canonicalForm, valid);
//			}

		}

	}

	private void checkForValidMoveMatch(ByteCanonicalForm canonicalForm, Valid valid) {
		Valid valid2 = validMap.get(canonicalForm);
		if (valid2 != null) {
			if (!valid2.equals(valid)) {
				KemetGame createGame2 = factory.createGame();
				createGame2.printActivations = false;
				createGame2.replayMultipleActions(movesToReach.get(canonicalForm));
				createGame2.printActivations = true;
				createGame.printActivations = true;

				log.info("Found two state that have the same canonical form but not the same valid legal moves.");

				log.info("Canonical Form " + Arrays.toString(canonicalForm.getCanonicalForm()));
				log.info("Next Player " + createGame.getNextPlayer());
				log.info("Legal moves : " + Arrays.toString(valid.valid));
				createGame.printDescribeGame();

				ByteCanonicalForm canonicalForm3 = createGame2.getCanonicalForm(createGame2.getNextPlayer());
				byte[] canonicalForm2 = canonicalForm3.getCanonicalForm();

				log.info("canonical form equals = " + (canonicalForm3.equals(canonicalForm)));

				log.info("Canonical Form " + Arrays.toString(canonicalForm2));
				log.info("Next Player " + createGame2.getNextPlayer());
				log.info("Legal moves : " + Arrays.toString(valid2.valid));
				createGame2.printDescribeGame();

				fail("Failed");
			}
		} else {
			String canonicalString = canonicalForm.toCanonicalString();
			validMap.put(canonicalString, valid);
			movesToReach.put(canonicalString, createGame.getActivatedActions());
		}
	}

}
